resolver local=on ipv6=off;

server {
    listen 9000;

    location / {

        set $target '';
        access_by_lua '
            local key = ngx.var.request_uri
            if not key then
                ngx.log(ngx.ERR, "no key requested")
                return ngx.exit(400)
            end

            local redis = require "resty.redis"
            local red = redis:new()

            red:set_timeout(1000) -- 1 second

            local ok, err = red:connect("redis-master.default.svc.cluster.local", 6379)
            if not ok then
                ngx.log(ngx.ERR, "failed to connect to redis: ", err)
                return ngx.exit(500)
            end

            local value, err = red:get(key)

            if not value then
                ngx.log(ngx.ERR, "failed to get redis key: ", err)
                ngx.status = 500
                ngx.say("Something not right")
                return ngx.exit(ngx.OK)
            end

            if value == ngx.null then
                ngx.log(ngx.ERR, "no host found for key ", key)
                ngx.status = 404
                ngx.say("Not found")
                return ngx.exit(ngx.OK)
            end

            if value then
                ngx.say(value)
                return
            end

            ngx.var.target = http
        ';

        
    }
}